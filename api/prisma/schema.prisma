// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Community {
  id        String   @id @default(uuid())
  name      String
  profiles Profile[] @relation(name: "Community")
}

model User {
  id        Int      @id @default(autoincrement())
  githubId String
  githubLogin String
  githubBio String
  profiles Profile[] @relation(name: "User")
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  name      String
  matchingPoint Int
  bio String
  driverPost Post[] @relation(name: "Driver")
  navigatorPost Post[] @relation(name: "Navigator")
  messages Message[] @relation(name: "createdBy")
  user User @relation(name: "User", fields: [userId], references: [id])
  userId Int
  community Community @relation(name: "Community", fields: [communityId], references: [id])
  communityId String
}

model Post {
  id          String      @id @default(uuid())
  createdAt   DateTime @default(now())
  description String
  title       String
  driver      Profile? @relation(name: "Driver", fields: [driverId], references: [id])
  driverId    Int?
  navigator   Profile? @relation(name: "Navigator", fields: [navigatorId], references: [id])
  navigatorId Int?
  completedAt DateTime?
  messages        Message[] @relation(name: "Message")
  requiredSkills Skill[] @relation(name: "RequiredBy")
}

model Message {
  id          Int      @id @default(autoincrement())
  post        Post     @relation(name: "Message", fields: [postId], references: [id])
  postId      String
  content     String
  createdAt DateTime @default(now())
  createdBy Profile @relation(name: "createdBy", fields: [createdById], references: [id])
  createdById Int
  isRead      Boolean @default(false)
}

model Skill {
  id          Int      @id @default(autoincrement())
  name        String
  category    String?
  imageUrl    String?
  requiredBy  Post[] @relation(name: "RequiredBy")
}
